@using FinalProject.Controllers
@model FinalProject.Controllers.CompaniesModel

@{
    ViewBag.Title = "Index";
}

<h2>Companies</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div>
    <strong>Filters</strong><br />
    Location: @foreach (var location in Model.AvailableLocations)
    {
        if (location == Model.LocationFilter)
        {
            <strong>
                @Html.ActionLink(location, "Index", new { location, Revenue = Model.RevenueFilter, Employees = Model.EmployeesRangesFilter })<span>, </span>
            </strong>
        }
        else
        {
            @Html.ActionLink(location, "Index", new { location, Revenue = Model.RevenueFilter, Employees = Model.EmployeesRangesFilter })<span>, </span>
        }

    }<br />

    Revenue:
    @if (Model.RevenueFilter == RevenueRanges.ZeroToTenThousand)
    {
        <strong>
            @Html.ActionLink("0-10000", "Index", new { Location = Model.LocationFilter, Revenue = RevenueRanges.ZeroToTenThousand, Employees = Model.EmployeesRangesFilter })<span>, </span>
        </strong>
    }
    else
    {
        @Html.ActionLink("0-10000", "Index", new { Location = Model.LocationFilter, Revenue = RevenueRanges.ZeroToTenThousand, Employees = Model.EmployeesRangesFilter })<span>, </span>
    }
    @if (Model.RevenueFilter == RevenueRanges.TenThousandToHundredThousand)
    {
        <strong>
            @Html.ActionLink("10000-100000", "Index", new { Location = Model.LocationFilter, Revenue = RevenueRanges.TenThousandToHundredThousand, Employees = Model.EmployeesRangesFilter })<span>, </span>
        </strong>
    }
    else
    {
        @Html.ActionLink("10000-100000", "Index", new { Location = Model.LocationFilter, Revenue = RevenueRanges.TenThousandToHundredThousand, Employees = Model.EmployeesRangesFilter })<span>, </span>
    }

    @if (Model.RevenueFilter == RevenueRanges.HundredThousandToMilion)
    {
        <strong>
            @Html.ActionLink("100000-1000000", "Index", new { Location = Model.LocationFilter, Revenue = RevenueRanges.HundredThousandToMilion, Employees = Model.EmployeesRangesFilter })<span>, </span><br />
        </strong>
    }
    else
    {
        @Html.ActionLink("100000-1000000", "Index", new { Location = Model.LocationFilter, Revenue = RevenueRanges.HundredThousandToMilion, Employees = Model.EmployeesRangesFilter })<span>, </span><br />
    }


    Employees:
    @if (Model.EmployeesRangesFilter == EmployeesRanges.ZeroToThousand)
    {
        <strong>
            @Html.ActionLink("0-1000", "Index", new { Location = Model.LocationFilter, Revenue = Model.RevenueFilter, Employees = EmployeesRanges.ZeroToThousand })<span>, </span>
        </strong>
    }
    else
    {
        @Html.ActionLink("0-1000", "Index", new {Location = Model.LocationFilter, Revenue = Model.RevenueFilter, Employees = EmployeesRanges.ZeroToThousand})<span>, </span>
    }

    @if (Model.EmployeesRangesFilter == EmployeesRanges.ThousandToTenThousand)
    {
        <strong>
            @Html.ActionLink("1000-10000", "Index", new { Location = Model.LocationFilter, Revenue = Model.RevenueFilter, Employees = EmployeesRanges.ThousandToTenThousand })<span>, </span>
        </strong>
    }
    else
    {
        @Html.ActionLink("1000-10000", "Index", new { Location = Model.LocationFilter, Revenue = Model.RevenueFilter, Employees = EmployeesRanges.ThousandToTenThousand })<span>, </span>
    }

    @if (Model.EmployeesRangesFilter == EmployeesRanges.TenThousandToFiftyThousand)
    {
        <strong>
            @Html.ActionLink("10000-50000", "Index", new { Location = Model.LocationFilter, Revenue = Model.RevenueFilter, Employees = EmployeesRanges.TenThousandToFiftyThousand })<span>, </span>
        </strong>
    }
    else
    {
        @Html.ActionLink("10000-50000", "Index", new { Location = Model.LocationFilter, Revenue = Model.RevenueFilter, Employees = EmployeesRanges.TenThousandToFiftyThousand })<span>, </span>
    }
    
</div>
<div>
    @Html.ActionLink("Clear Filters", "Index")
</div>

<table class="table">
    <tr>
        <th>
            Name
        </th>
        <th>
            Location
        </th>
        <th>
            Revenue
        </th>
        <th>
            Employees
        </th>
        <th>
            Most Popular Dev Product
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Companies)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalRevenue)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfEmployees)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MostPopularDevelopmentTool.Name)
            </td>
            <td>
                @Html.ActionLink("Details", "Details", new { id = item.CompanyId }) |

                @if (User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = item.CompanyId })<span>
                        |
                    </span>
                    @Html.ActionLink("Delete", "Delete", new { id = item.CompanyId })
                }
            </td>
        </tr>
    }

</table>

<div id="map-canvas"></div>

<style>
    html, body, #map-canvas {
        height: 800px;
        margin: 0px;
        padding: 0px;
    }
</style>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCfiVsoXlAczf7sp0Uxl7XhL0XZm70XWcQ">
</script>
@Scripts.Render("~/bundles/Map")
<script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        initializeMap();
        @foreach (var Company in Model.Companies.Select(x => new { Coordinates = x.Coordinates, Name = x.Name }))
        {
            <text>addMarkerToMap(@Html.Raw(Json.Encode(Company)));</text>
        }
    });
</script>


